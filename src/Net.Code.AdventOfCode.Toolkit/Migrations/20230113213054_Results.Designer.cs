// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net.Code.AdventOfCode.Toolkit.Data;

#nullable disable

namespace Net.Code.AdventOfCode.Toolkit.Migrations
{
    [DbContext(typeof(AoCDbContext))]
    [Migration("20230113213054_Results")]
    partial class Results
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Net.Code.AdventOfCode.Toolkit.Core.DayResult", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.HasKey("Year", "Day");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Net.Code.AdventOfCode.Toolkit.Core.Puzzle", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Html")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Year", "Day");

                    b.ToTable("Puzzles");
                });

            modelBuilder.Entity("Net.Code.AdventOfCode.Toolkit.Core.DayResult", b =>
                {
                    b.OwnsOne("Net.Code.AdventOfCode.Toolkit.Core.Result", "Part1", b1 =>
                        {
                            b1.Property<int>("DayResultYear")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DayResultDay")
                                .HasColumnType("INTEGER");

                            b1.Property<TimeSpan>("Elapsed")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("DayResultYear", "DayResultDay");

                            b1.ToTable("Results");

                            b1.WithOwner()
                                .HasForeignKey("DayResultYear", "DayResultDay");
                        });

                    b.OwnsOne("Net.Code.AdventOfCode.Toolkit.Core.Result", "Part2", b1 =>
                        {
                            b1.Property<int>("DayResultYear")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DayResultDay")
                                .HasColumnType("INTEGER");

                            b1.Property<TimeSpan>("Elapsed")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("DayResultYear", "DayResultDay");

                            b1.ToTable("Results");

                            b1.WithOwner()
                                .HasForeignKey("DayResultYear", "DayResultDay");
                        });

                    b.Navigation("Part1")
                        .IsRequired();

                    b.Navigation("Part2")
                        .IsRequired();
                });

            modelBuilder.Entity("Net.Code.AdventOfCode.Toolkit.Core.Puzzle", b =>
                {
                    b.OwnsOne("Net.Code.AdventOfCode.Toolkit.Core.Answer", "Answer", b1 =>
                        {
                            b1.Property<int>("PuzzleYear")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("PuzzleDay")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("part1")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("part2")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("PuzzleYear", "PuzzleDay");

                            b1.ToTable("Puzzles");

                            b1.WithOwner()
                                .HasForeignKey("PuzzleYear", "PuzzleDay");
                        });

                    b.Navigation("Answer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
